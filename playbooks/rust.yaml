---
# Setup Rust
# https://www.rust-lang.org/tools/install
# https://doc.rust-lang.org/cargo/reference/environment-variables.html
- name: Ensure the latest rust tools are installed
  hosts: all
  become: true
  environment:
    RUSTUP_HOME: /usr/local/rustup
    CARGO_HOME: /usr/local/cargo
    RUSTC_WRAPPER: ""
    PATH: "{{ ansible_env.CARGO_HOME }}/bin:{{ ansible_env.RUSTUP_HOME }}/bin:{{ ansible_env.PATH }}"
  vars:
    deb_architecture:
      aarch64: "arm64"
      x86_64: "amd64"
  tags:
    - packages
    - raspberrypi
    - raspianos
    - rust
    - cleanup
  tasks:
    - name: Remove old Rust on Debian
      when: ansible_distribution == "Debian"
      ansible.builtin.apt:
        name: "{{ item }}"
        state: absent
        update_cache: true
      with_items:
        - rust-all
        - rust-clippy
        - rust-coreutils
        - rust-doc
        - rust-gdb
        - rust-lldb
        - rust-markdown
        - rust-src
        - rust-web-clippy
        - rust-web-doc
        - rust-web-gdb
        - rust-web-lldb
        - rust-web-src
        - rustc
        - rustc-web
        - rustdoc-stripper
        - rustfilt
        - rustfmt
        - rustfmt-web
        - rusty-tags
    - name: Install Rust dependencies
      ansible.builtin.apt:
        name: "{{ item }}"
        state: present
        update_cache: true
        cache_valid_time: 3600
      with_items:
        - libssl-dev
    - name: Add /etc/profile.d/rust.sh
      ansible.builtin.copy:
        dest: /etc/profile.d/rust.sh
        content: |
          export RUSTUP_HOME="{{ ansible_env.RUSTUP_HOME }}"
          export CARGO_HOME="{{ ansible_env.CARGO_HOME }}"
          PATH="${RUSTUP_HOME}/bin:${PATH}"
          PATH="${CARGO_HOME}/bin:${PATH}"
        mode: "0644"
    - name: Initial Rust setup
      ansible.builtin.stat:
        path: /usr/local/cargo/bin/rustup
      register: rustup_stat
    - name: Download Rust installer
      ansible.builtin.get_url:
        dest: /usr/local/sbin/rustup-setup
        url: https://sh.rustup.rs
        mode: "0555"
      when: not rustup_stat.stat.exists
    - name: Run Rust installer
      ansible.builtin.command:
        argv:
          - /usr/local/sbin/rustup-setup
          - --default-toolchain
          - stable
          - --no-modify-path
          - -y
      args:
        creates: "{{ ansible_env.CARGO_HOME }}/bin/cargo"
      when: not rustup_stat.stat.exists
    - name: Current Rust version
      ansible.builtin.command:
        argv:
          - rustc
          - --version
      register: rust_version_old
      when: rustup_stat.stat.exists
      changed_when: false
    - name: Update Rust
      ansible.builtin.command:
        argv:
          - rustup
          - update
      when: rustup_stat.stat.exists
      register: rustup_update
      changed_when: rust_version_old.stdout not in rustup_update.stdout
    - name: Ensure cargo packages are installed
      block:
        - name: Install sccache
          ansible.builtin.command:
            argv:
              - cargo
              - install
              - --locked
              - sccache
          args:
            creates: "{{ ansible_env.CARGO_HOME }}/bin/sccache"
        - name: Add sccache config to profile
          ansible.builtin.lineinfile:
            path: /etc/profile.d/rust.sh
            regexp: "^RUSTC_WRAPPER=.*$"
            insertafter: "^PATH=.*$"
            line: 'RUSTC_WRAPPER="sccache"'
        - name: Install via cargo part 1
          ansible.builtin.shell: |
            cargo install --locked "{{ item }}" || cargo install "{{ item }}"
          with_items:
            - bacon
            - bandwhich
            - bat
            - cargo-audit
            - cargo-chef
            - cargo-edit
            - cargo-fix
            - cargo-fuzz
            - cargo-generate
            - cargo-info
            - cargo-llvm-cov
            - cargo-make
            - cargo-outdated
            - cargo-scaffold
            - cargo-spellcheck
            - cargo-upgrades
            - cargo-vet
            - cargo-watch
            - git-cliff
            - just
            - nu
            - release-plz
            - ripgrep
            - speedtest-rs
            - zellij
            - zoxide
          environment:
            RUSTC_WRAPPER: "sccache"
          args:
            creates: "{{ ansible_env.CARGO_HOME }}/bin/{{ item }}"
        - name: Install via cargo part 2
          ansible.builtin.shell: |
            cargo install --locked "{{ item.name }}" || cargo install "{{ item.name }}"
          with_items:
            - {name: bottom, bin: btm}
            - {name: typos-cli, bin: typos}
            - {name: tree-sitter-cli, bin: tree-sitter}
          environment:
            RUSTC_WRAPPER: "sccache"
          args:
            creates: "{{ ansible_env.CARGO_HOME }}/bin/{{ item.bin }}"
