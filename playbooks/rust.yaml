---
# Setup Rust
# https://www.rust-lang.org/tools/install
# https://doc.rust-lang.org/cargo/reference/environment-variables.html
- name: Ensure the latest rust tools are installed
  hosts: all
  become: true
  environment:
    RUSTUP_HOME: "{{ rustup_home }}"
    CARGO_HOME: "{{ cargo_home }}"
    RUSTC_WRAPPER: ""
    PATH: "{{ ansible_env.PATH }}:{{ cargo_home }}/bin:{{ rustup_home }}/bin"
  vars:
    deb_architecture:
      aarch64: "arm64"
      x86_64: "amd64"
    cargo_home: "/usr/local/cargo"
    rustup_home: "/usr/local/rustup"
    crates:
      - bacon
      - bandwhich
      - bat
      - bottom
      - cargo-audit
      - cargo-chef
      - cargo-edit
      - cargo-fix
      - cargo-fuzz
      - cargo-generate
      - cargo-info
      - cargo-llvm-cov
      - cargo-make
      - cargo-outdated
      - cargo-scaffold
      - cargo-spellcheck
      - cargo-upgrades
      - cargo-vet
      - cargo-watch
      - git-cliff
      - just
      - nu
      - release-plz
      - ripgrep
      - speedtest-rs
      - tree-sitter-cli
      - typos-cli
      - zellij
      - zoxide
    crates_git:
      - {
          url: "https://github.com/astral-sh/uv",
          binaries: "uv",
          extra_flags: "",
          failure_ok: true,
        }
      - {
          url: "https://github.com/oxalica/nil",
          binaries: "nil",
          extra_flags: "",
        }
      - {
          url: "https://github.com/tealdeer-rs/tealdeer",
          binaries: "tealdeer",
          extra_flags: "",
        }
  tags:
    - packages
    - raspberrypi
    - raspianos
    - rust
    - cleanup
  tasks:
    - name: Remove old Rust on Debian
      when: ansible_distribution == "Debian"
      ansible.builtin.apt:
        name: "{{ item }}"
        state: absent
        update_cache: true
      with_items:
        - rust-all
        - rust-clippy
        - rust-coreutils
        - rust-doc
        - rust-gdb
        - rust-lldb
        - rust-markdown
        - rust-src
        - rust-web-clippy
        - rust-web-doc
        - rust-web-gdb
        - rust-web-lldb
        - rust-web-src
        - rustc
        - rustc-web
        - rustdoc-stripper
        - rustfilt
        - rustfmt
        - rustfmt-web
        - rusty-tags
    - name: Install Rust dependencies
      ansible.builtin.apt:
        name: "{{ item }}"
        state: present
        update_cache: true
        cache_valid_time: 3600
      with_items:
        - libssl-dev
    - name: Add /etc/profile.d/rust.sh
      ansible.builtin.copy:
        dest: /etc/profile.d/rust.sh
        content: |
          export RUSTUP_HOME="{{ ansible_env.RUSTUP_HOME }}"
          export CARGO_HOME="{{ ansible_env.CARGO_HOME }}"
          PATH="${RUSTUP_HOME}/bin:${PATH}"
          PATH="${CARGO_HOME}/bin:${PATH}"
        mode: "0644"
    - name: Initial Rust setup
      ansible.builtin.stat:
        path: /usr/local/cargo/bin/rustup
      register: rustup_stat
    - name: Download Rust installer
      ansible.builtin.get_url:
        dest: /usr/local/sbin/rustup-setup
        url: https://sh.rustup.rs
        mode: "0555"
      when: not rustup_stat.stat.exists
    - name: Run Rust installer
      ansible.builtin.command:
        argv:
          - /usr/local/sbin/rustup-setup
          - --default-toolchain
          - stable
          - --no-modify-path
          - -y
      args:
        creates: "{{ ansible_env.CARGO_HOME }}/bin/cargo"
      when: not rustup_stat.stat.exists
    - name: Current Rust version
      ansible.builtin.command:
        argv:
          - rustc
          - --version
      register: rust_version_old
      when: rustup_stat.stat.exists
      changed_when: false
    - name: Update Rust
      ansible.builtin.command:
        argv:
          - rustup
          - update
      when: rustup_stat.stat.exists
      register: rustup_update
      changed_when: rust_version_old.stdout not in rustup_update.stdout
    - name: Ensure cargo packages are installed
      block:
        - name: Install sccache
          environment:
            RUSTC_WRAPPER: ""
          ansible.builtin.shell: |
            if command -v sccache &> /dev/null; then
              export RUSTC_WRAPPER="sccache"
            fi
            cargo install sccache
          register: sccache_version
          changed_when: not "Ignored package" in sccache_version.stdout
        - name: Add sccache config to profile
          ansible.builtin.lineinfile:
            path: /etc/profile.d/rust.sh
            regexp: "^RUSTC_WRAPPER=.*$"
            insertafter: "^PATH=.*$"
            line: 'RUSTC_WRAPPER="sccache"'
        - name: Install via cargo
          ansible.builtin.include_tasks: ../tasks/rust-install-crate.yaml
          args:
            apply:
              environment:
                RUSTC_WRAPPER: "sccache"
          loop: "{{ crates }}"
        - name: Install via cargo using git
          ansible.builtin.include_tasks: ../tasks/rust-install-crate-via-git.yaml
          args:
            apply:
              environment:
                RUSTC_WRAPPER: "sccache"
          loop: "{{ crates_git }}"
