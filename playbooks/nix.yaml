---
# Setup Nix - https://nix.dev/install-nix.html
# Uninstall Nix - https://nix.dev/manual/nix/2.18/installation/uninstall
# Note: the version from apt install to /usr/bin/nix and sets the socket to root:root
# TODO: Need to figure out how to tell when it's outdated so it gets updated.
- name: Download Nix installer and run it
  hosts: all
  become: true
  vars:
    nix_profile_files:
      - { src: "/etc/bash.bashrc.backup-before-nix", dst: "/etc/bash.bashrc" }
      - { src: "/etc/bashrc.backup-before-nix", dst: "/etc/bashrc" }
      - {
          src: "/etc/profile.d/nix.sh.backup-before-nix",
          dst: "/etc/profile.d/nix.sh",
        }
      - { src: "/etc/zshrc.backup-before-nix", dst: "/etc/zshrc" }
    nix_services:
      - nix-daemon.service
      - nix-daemon.socket
  tasks:
    - name: Install package managers
      tags:
        - nix-apt-uninstall
      ansible.builtin.apt:
        name: "{{ item }}"
        state: absent
        update_cache: false
      with_items:
        - nix-bin
        - nix-setup-systemd
    - name: Is Nix already installed?
      ansible.builtin.shell: |
        [ -f /etc/profile.d/nix.sh ] &&. /etc/profile.d/nix.sh
        which nix
      ignore_errors: true
      register: nix_found
      changed_when: false
      tags:
        - nix-check-installed
    - name: Clean up Apt's nix installation
      when: nix_found.failed
      block:
        - name: Clean up Apt's nix installation | Clean up nixbld users
          ansible.builtin.user:
            name: "{{ item }}"
            state: absent
            remove: false
          with_items:
            - nixbld1
            - nixbld2
            - nixbld3
            - nixbld4
            - nixbld5
            - nixbld6
            - nixbld7
            - nixbld8
            - nixbld9
            - nixbld10
            - nixbld11
            - nixbld12
            - nixbld13
            - nixbld14
            - nixbld15
            - nixbld16
            - nixbld17
            - nixbld18
            - nixbld19
            - nixbld20
            - nixbld21
            - nixbld22
            - nixbld23
            - nixbld24
            - nixbld25
            - nixbld26
            - nixbld27
            - nixbld28
            - nixbld29
            - nixbld30
            - nixbld31
            - nixbld32
        - name: Clean up Apt's nix installation | Clean up nixbld groups
          ansible.builtin.group:
            name: "{{ item }}"
            state: absent
          with_items:
            - nixbld
            - nix-users
        - name: Clean up Apt's nix installation | Restore /etc/*.backup-before-nix files
          ansible.builtin.include_tasks: ../tasks/nix-restore-files.yaml
          loop: "{{ nix_profile_files }}"
        - name: Clean up Apt's nix installation | Clean up nix services
          ansible.builtin.include_tasks: ../tasks/systemd-disable-services.yaml
          loop: "{{ nix_services }}"
        - name: Clean up Apt's nix installation | Clean up nix files and directories
          ansible.builtin.file:
            name: "{{ item }}"
            state: absent
          with_items:
            - /nix
            - /etc/nix
            - /etc/systemd/system/nix-daemon.service
            - /etc/systemd/system/nix-daemon.socket
            - /root/.nix-profile
            - /root/.nix-channels
            - /root/.nix-defexpr
            - /usr/local/bin/nix
    - name: Install Nix package manager
      when: nix_found.failed
      block:
        - name: Install Nix package manager | Download Nix installer
          ansible.builtin.get_url:
            dest: /usr/local/sbin/nix-install
            url: https://nixos.org/nix/install
            checksum: "sha512:7d7821b9537d6b4aea3b471dd76d3e635b330085348c117a73bc71f5b47e8fb6c84d24c1dc53014ca8607f6732a398788115d9bc08baf0af7337b0ef985a4060"
            mode: "0550"
        - name: Install Nix package manager | Run Nix installer
          environment:
            BIN_DIR: /usr/local/bin
          ansible.builtin.command: /usr/local/sbin/nix-install --daemon --yes
          args:
            creates: /usr/local/bin/nix
    - name: Create nix-users group
      ansible.builtin.group:
        name: nix-users
        state: present
    - name: Add users to nix-users group
      ansible.builtin.user:
        name: "{{ item }}"
        groups: nix-users
        append: true
      with_items:
        - "{{ lookup('env', 'USER') }}"
    - name: Add users to nix-users group
      ansible.builtin.file:
        path: /nix/var/nix/daemon-socket/
        state: directory
        owner: root
        group: nix-users
        mode: "0770"
    - name: Update nix configuration
      block:
        - name: Add /etc/profile.d/golang.sh
          ansible.builtin.copy:
            dest: /etc/profile.d/zz-nix-locale.sh
            content: |
              if [ -f /etc/nix/nix.conf ]; then
                if ! nix-store --query --requisites /nix/var/nix/profiles/default/ | cut -d- -f2- | sort -u | grep -q '^glibc-locales'; then
                  nix profile install nixpkgs#glibcLocales
                fi
                export LOCALE_ARCHIVE="/nix/var/nix/profiles/default/lib/locale/locale-archive"
              fi
              if [ -f /usr/lib/locale/locale-archive ]; then
                export LOCALE_ARCHIVE=/usr/lib/locale/locale-archive
              fi

              export LOCALE_ARCHIVE="$(nix profile list | grep glibcLocales | tail -n 1 | cut -d ' ' -f 4)/lib/locale/locale-archive"
            mode: "0655"
        - name: Add System Nix to Path
          ansible.builtin.copy:
            dest: /etc/profile.d/zzz-nix-system.sh
            content: "PATH=/nix/var/nix/profiles/default/bin:${PATH}"
            mode: "0655"
          when: ansible_env.PATH is not search("/nix/var/nix/profiles/default/bin")
        - name: Add Root Nix to Path
          ansible.builtin.copy:
            dest: /etc/profile.d/zzz-nix-root.sh
            content: "PATH=/root/.nix-profile/bin:${PATH}"
            mode: "0655"
          when: ansible_env.PATH is not search("/root/.nix-profile/bin")
        - name: Manage with nix system manager
          ansible.builtin.shell: |
            . /etc/profile.d/zz-nix-locale.sh
            . /etc/profile.d/zzz-nix-system.sh
            . /etc/profile.d/zzz-nix-root.sh
            [ -L /etc/nix/nix.conf ] ||  mv -v /etc/nix/nix.conf /etc/nix/nix.conf~
            [ -L /etc/systemd/system/nix-daemon.service ] || mv -v /etc/systemd/system/nix-daemon.service /etc/systemd/system/nix-daemon.service~
            cd /root/
            [ -d homelab-nix-on-raspian ] || git clone https://github.com/vpayno/homelab-nix-on-raspian
            cd homelab-nix-on-raspian
            git pull
            nix --extra-experimental-features 'nix-command flakes' run 'github:numtide/system-manager' -- switch --flake '.'
          changed_when: true
